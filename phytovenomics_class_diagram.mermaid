classDiagram
    class SetupManager {
        <<entry point>>
        -config_path: str
        -log_path: str
        -environment: str
        +__init__(config_path: str, environment: str)
        +run_setup() : bool
        +validate_system_requirements() : bool
        +setup_environment() : bool
        +install_dependencies() : bool
        +download_models() : bool
        +configure_project() : bool
        +run_tests() : bool
        +generate_setup_report() : dict
    }
    
    class EnvironmentManager {
        -environment: str
        -config: dict
        +__init__(environment: str, config: dict)
        +setup_environment() : bool
        +create_virtual_env(name: str) : bool
        +activate_environment() : bool
        +verify_environment() : bool
    }
    
    class DependencyManager {
        -environment: str
        -config: dict
        -requirements_files: dict
        +__init__(environment: str, config: dict)
        +install_core_dependencies() : bool
        +install_environment_specific_dependencies() : bool
        +install_optional_dependencies() : bool
        +verify_installations() : bool
        +generate_dependency_report() : dict
    }
    
    class ModelManager {
        -model_config: dict
        -download_dir: str
        -checksum_dict: dict
        +__init__(model_config: dict, download_dir: str)
        +download_models(models_list: list) : bool
        +download_model(model_name: str) : bool
        +verify_model_checksum(model_name: str) : bool
        +extract_model(model_path: str) : bool
        +get_model_size(model_name: str) : int
        +get_available_models() : list
    }
    
    class ConfigManager {
        -config_path: str
        -environment: str
        +__init__(config_path: str, environment: str)
        +load_config() : dict
        +get_environment_config() : dict
        +get_model_config() : dict
        +update_config(key: str, value: any) : bool
        +save_config() : bool
        +generate_default_config() : bool
    }
    
    class Logger {
        -log_path: str
        -log_level: str
        +__init__(log_path: str, log_level: str)
        +log_info(message: str) : None
        +log_warning(message: str) : None
        +log_error(message: str) : None
        +log_success(message: str) : None
    }
    
    class SystemValidator {
        +validate_system() : bool
        +check_python_version() : bool
        +check_disk_space() : bool
        +check_memory() : bool
        +check_gpu() : bool
        +check_cuda() : bool
        +check_internet_connection() : bool
    }
    
    class SetupCLI {
        +setup(environment: str, config_path: str, skip_tests: bool, force: bool) : None
        +download_models(models: list, force: bool) : None
        +check_system() : None
        +update_dependencies() : None
    }
    
    SetupManager --> EnvironmentManager : uses
    SetupManager --> DependencyManager : uses
    SetupManager --> ModelManager : uses
    SetupManager --> ConfigManager : uses
    SetupManager --> Logger : uses
    SetupManager --> SystemValidator : uses
    SetupCLI --> SetupManager : uses